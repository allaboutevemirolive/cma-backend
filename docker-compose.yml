# docker-compose.yml

services:
  db:
    image: postgres:14-alpine
    container_name: cma_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-course_db}
      POSTGRES_USER: ${POSTGRES_USER:-course_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-course_password}
    ports:
      - "5435:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-course_user} -d ${POSTGRES_DB:-course_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cma_web
    command: python manage.py runserver 0.0.0.0:8000 --nostatic
    volumes:
      # Mount host 'src/' directory to container '/app'
      - ./src:/app
      # Mount host 'media/' directory to container '/app/media' (where MEDIA_ROOT points inside container)
      - ./media:/app/media
      # Optional: Mount collected static files if needed for dev (usually served directly in prod)
      # - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    env_file:
      # Load .env from project root
      - .env
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local


