# src/config/urls.py

from django.contrib import admin
from django.urls import path, include
from django.conf import settings            # To access settings variables (like DEBUG)
from django.conf.urls.static import static  # To serve media files in development

# --- drf-yasg (Swagger/OpenAPI) ---
from drf_yasg.views import get_schema_view
from drf_yasg import openapi
from rest_framework import permissions

# --- Simple JWT (Token Authentication) ---
from rest_framework_simplejwt.views import (
    TokenObtainPairView,  # View to get access/refresh tokens
    TokenRefreshView,     # View to refresh access token
)

# --- Schema View Configuration (for drf-yasg) ---
# Defines the metadata for the OpenAPI specification generated by drf-yasg.
schema_view = get_schema_view(
   openapi.Info(
      title="Course Management API",
      default_version='v1',
      description="API for managing educational courses. Supports CRUD operations, filtering, JWT authentication, and image uploads.",
      terms_of_service="https://www.example.com/policies/terms/", # Replace with your actual terms URL
      contact=openapi.Contact(email="api-support@example.com"),    # Replace with your contact email
      license=openapi.License(name="BSD 3-Clause License"),       # Replace with your chosen license
   ),
   public=True, # Allows schema view access without authentication
   permission_classes=(permissions.AllowAny,), # Permissions required to access the schema endpoint itself
)

# --- URL Patterns ---
# The main list of URL routes for the entire project.
urlpatterns = [
    # 1. Django Admin Site
    # Provides the built-in administrative interface.
    path('admin/', admin.site.urls),

    # 2. API Endpoints for Courses App
    # Includes all URLs defined in 'apps/courses/urls.py' under the '/api/' prefix.
    # This is where the CourseViewSet routes (list, create, retrieve, etc.) are defined.
    path('api/', include('apps.courses.urls')), # *** Corrected path to courses app URLs ***

    # 3. JWT Authentication Endpoints
    # POST to '/api/token/' with username/password to get JWT tokens.
    path('api/token/', TokenObtainPairView.as_view(), name='token_obtain_pair'),
    # POST to '/api/token/refresh/' with a valid refresh token to get a new access token.
    path('api/token/refresh/', TokenRefreshView.as_view(), name='token_refresh'),

    # 4. API Documentation Endpoints (drf-yasg)
    # Serves the OpenAPI schema in JSON or YAML format.
    path('swagger<format>/', schema_view.without_ui(cache_timeout=0), name='schema-json'), # <format> can be '.json' or '.yaml'
    # Serves the interactive Swagger UI documentation browser.
    path('swagger/', schema_view.with_ui('swagger', cache_timeout=0), name='schema-swagger-ui'),
    # Serves the alternative ReDoc documentation browser.
    path('redoc/', schema_view.with_ui('redoc', cache_timeout=0), name='schema-redoc'),

]

# --- Media File Serving (Development Only) ---
# This pattern is added ONLY when DEBUG is True.
# It tells Django's development server how to serve user-uploaded files (MEDIA_ROOT)
# when requested via their MEDIA_URL prefix.
# WARNING: This is insecure and inefficient for production. In production, your
# web server (e.g., Nginx, Apache) should be configured to serve media files directly.
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

# --- Static File Serving (Development Only - Usually Automatic) ---
# Django's runserver automatically handles serving static files from INSTALLED_APPS
# and STATICFILES_DIRS when DEBUG=True if 'django.contrib.staticfiles' is installed.
# Explicitly adding static() for STATIC_URL is typically only needed if you are
# NOT using runserver or have a complex setup.
# if settings.DEBUG:
#    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
